version: '3'

vars:
  WITH_CUDA: '{{.WITH_CUDA| default false}}'

tasks:
  venv:create:
    desc: Create a python virtual environment
    cmds:
      - cmd: py -m venv .venv
        platforms: [windows]
      - cmd: python3 -m venv .venv
        platforms: [linux]
    status:
      - test -f .venv/Scripts/activate

  venv:
    desc: Start the virtual environment
    deps: [venv:create]
    cmds: 
      - cmd: cd .venv/Scripts && activate
        platforms: [windows]
        interactive: true
      - cmd: bash -c -i "source  .venv/bin/activate"
        interactive: true
        platforms: [linux]


  install-deps:
    desc: Install Python dependencies
    deps: [venv:create]
    cmds:
      - cmd: 'cd .venv/Scripts && activate && cd ../../ && pip install -r tensorflow-{{if eq .WITH_CUDA "true"}}{{"gpu"}}{{else}}{{"cpu"}}{{end}}-requirements.txt'
        platforms: [windows]
      - cmd: 'bash -c -i "source .venv/bin/activate" && pip install -r tensorflow-{{if eq .WITH_CUDA "true"}}{{"gpu"}}{{else}}{{"cpu"}}{{end}}-requirements.txt'
        platforms: [linux]

  notebook:
    desc: Start Jupyter Notebook server
    cmds:
      - jupyter notebook

  lint:
    desc: Run code linting
    cmds:
      - flake8 .

  test:
    desc: Run tests
    cmds:
      - pytest

  clean:
    desc: Clean temporary files
    cmds:
      - rm -rf __pycache__ .pytest_cache .ipynb_checkpoints

  setup:
    desc: Setup environment
    cmds:
      - cmd: py -m venv .venv
      - task: install-dependencies